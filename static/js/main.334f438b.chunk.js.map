{"version":3,"sources":["constants/index.js","components/NavBar/index.js","actions/emailModal.js","components/Footer/index.js","components/EmailModal/index.js","actions/alerts.js","components/Alerts/index.js","actions/getAllCurrencies.js","pages/MainPage/index.js","pages/ConverterPage/index.js","actions/converter.js","navigation/index.js","reducers/MainPageReducer.js","reducers/ConverterPageReducer.js","reducers/FooterReducer.js","reducers/AlertsReducer.js","reducers/index.js","index.js"],"names":["ROUTES","actionTypes","GET_ALL_CURRENCIES_START","GET_ALL_CURRENCIES_SUCCESS","GET_ALL_CURRENCIESS_FAILURE","SET_EMAIL_MODAL_ACTIVE","SET_EMAIL_MODAL_NOT_ACTIVE","CHANGE_EMAIL_SENDER_NAME","CHANGE_EMAIL_SENDER_ADRESS","CHANGE_EMAIL_SENDER_MESSAGE","CHANGE_CONVERTER_VALUE","SET_ALERT_ACTIVE","SET_ALERT_NOT_ACTIVE","useStyles","makeStyles","theme","navBar","width","height","display","justifyContent","alignItems","navBarLink","textDecoration","margin","fontFamily","color","transition","navBarLinksContainer","Navbar","classes","useState","checked","setChecked","useEffect","prev","className","Slide","direction","in","timeout","to","hideEmailModal","payload","type","footer","footerIconsContainer","breakpoints","up","iconContainer","iconContainerLast","icons","emailButton","padding","background","border","cursor","Footer","dispatch","useDispatch","showModal","useCallback","href","onClick","emailModalWrapper","backdropFilter","position","top","left","zIndex","transform","emailModalWrapperActive","modal","inputContainer","flexDirection","marginTop","input","buttonsContainer","marginBottom","modalButton","EmailModal","active","useSelector","state","emailModal","name","emailSenderName","adress","emailSenderAdress","message","emailSenderMessage","form","useRef","hideModal","onChangeEmailSenderName","event","target","value","onChangeEmailSenderAdress","onChangeEmailSenderMessage","correctEmail","notEmptyField","ref","TextField","label","variant","size","onChange","test","multiline","rows","Button","e","preventDefault","emailjs","sendForm","current","then","result","console","log","text","error","setTimeout","hideAlert","disabled","successSendingEmailWrapper","successSendingEmailWrapperActive","alertContainer","bottom","right","SuccessEmailSending","alerts","activeAlert","Alert","severity","AlertTitle","getAllCurrencies","a","axios","get","response","data","mainPage","mainPageWrapper","tableContainer","scrollbars","tableCellBody","textAlign","tableCellHeader","collapse","columns","id","minWidth","align","format","toLocaleString","MainPage","currencies","main","map","item","push","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","row","hover","Cur_Abbreviation","Cur_Scale","Cur_Name","Cur_OfficialRate","Cur_ID","converterPage","converterInputContainer","converterInputElement","converterResult","fontSize","fontWeight","converterResultContainer","ConverterPage","rate","converter","inputValue","fromCurrency","setFromCurrency","rates","Object","fromEntries","n","abbreviatures","keys","forEach","key","inputValueHandleChange","start","end","duration","decimals","Select","defaultValue","MenuItem","Navigator","path","component","initialState","loading","reducer","action","GET_ALLCURRENCIESS_FAILURE","successSendingEmail","combineReducers","MainPageReducer","ConverterPageReducer","EmailModalReducer","AlertsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.334f438b.chunk.js","sourcesContent":["export const ROUTES = {\r\n    MAIN: '/',\r\n    CONVERTER: '/converter'\r\n};\r\n\r\nexport const actionTypes = {\r\n    // get currencies actions\r\n    GET_ALL_CURRENCIES_START: 'GET_ALL_CURRENCIES_START',\r\n    GET_ALL_CURRENCIES_SUCCESS: 'GET_ALL_CURRENCIES_SUCCESS',\r\n    GET_ALL_CURRENCIESS_FAILURE: 'GET_ALL_CURRENCIES_FAILURE',\r\n    \r\n    // email modal window actions\r\n    SET_EMAIL_MODAL_ACTIVE: 'SET_EMAIL_MODAL_ACTIVE',\r\n    SET_EMAIL_MODAL_NOT_ACTIVE: 'SET_EMAIL_MODAL_NOT_ACTIVE',\r\n    \r\n    // email modal window inputs actions\r\n    CHANGE_EMAIL_SENDER_NAME: 'CHANGE_EMAIL_SENDER_NAME',\r\n    CHANGE_EMAIL_SENDER_ADRESS: 'CHANGE_EMAIL_SENDER_ADRESS',\r\n    CHANGE_EMAIL_SENDER_MESSAGE: 'CHANGE_EMAIL_SENDER_MESSAGE',    \r\n    \r\n    // converter page input actions\r\n    CHANGE_CONVERTER_VALUE: 'CHANGE_CONVERTER_VALUE',\r\n    \r\n    // alert actions\r\n    SET_ALERT_ACTIVE: 'SET_ALERT_ACTIVE',\r\n    SET_ALERT_NOT_ACTIVE: 'SET_ALERT_NOT_ACTIVE',\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ROUTES } from '../../constants';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navBar: {\r\n        width: '100%',\r\n        height: '10vh', \r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',       \r\n    },\r\n    navBarLink: {\r\n        textDecoration: 'none',\r\n        margin: '0 20px',\r\n        fontFamily: 'Nunito',\r\n        color: '#6d6d6d',\r\n        '&:hover': {\r\n            color: '#3f51b5'\r\n        },\r\n        transition: `all 400ms ease-in-out`,\r\n    },\r\n    navBarLinksContainer: {\r\n        width: '85%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();  \r\n    const [checked, setChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setChecked((prev) => !prev);\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className={classes.navBar}>          \r\n            <Slide \r\n            direction=\"down\" \r\n            in={checked} \r\n            {...(checked ? {timeout: 1000} : {})}\r\n            >\r\n                <div className={classes.navBarLinksContainer}>\r\n                    <Link className={classes.navBarLink} to={ROUTES.MAIN}>Главная</Link>\r\n                    <Link className={classes.navBarLink} to={ROUTES.CONVERTER}>Конвертер</Link>    \r\n                </div>\r\n            </Slide>                                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Navbar }","import { actionTypes } from '../constants'\r\n\r\n// email modal window actions\r\nexport const showEmailModal = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_EMAIL_MODAL_ACTIVE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const hideEmailModal = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_EMAIL_MODAL_NOT_ACTIVE,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n// email modal window inputs actions\r\nexport const changeEmailSenderName = (payload) => {\r\n    return {\r\n        type: actionTypes.CHANGE_EMAIL_SENDER_NAME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeEmailSenderAdress = (payload) => {\r\n    return {\r\n        type: actionTypes.CHANGE_EMAIL_SENDER_ADRESS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const changeEmailSenderMessage = (payload) => {\r\n    return {\r\n        type: actionTypes.CHANGE_EMAIL_SENDER_MESSAGE,\r\n        payload\r\n    }\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showEmailModal } from '../../actions/emailModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        width: '100%',\r\n        height: '10vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    footerIconsContainer: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '85%',\r\n        },\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n    },\r\n    iconContainer: {\r\n        margin: '0 10px',\r\n    },\r\n    iconContainerLast: {\r\n        margin: '0 30px 0 10px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: '0 0 0 10px',\r\n        },\r\n    },\r\n    icons: {        \r\n        color: '#6d6d6d',\r\n        '&:hover': {\r\n            color: '#3f51b5'\r\n        },\r\n        transition: `all 400ms ease-in-out`,\r\n    },\r\n    emailButton: {         \r\n        padding: '0',       \r\n        background: 'none',\r\n        border: 'none',\r\n        cursor: 'pointer',        \r\n    }\r\n   \r\n}));\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [checked, setChecked] = useState(false);    \r\n\r\n    const showModal = useCallback(() => {\r\n        dispatch(showEmailModal());\r\n    }, [dispatch]); \r\n\r\n    useEffect(() => {\r\n        setChecked((prev) => !prev);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.footer}>\r\n            <div className={classes.footerIconsContainer}>\r\n                <Slide \r\n                direction='right' \r\n                in={checked}\r\n                {...(checked ? {timeout: 1500} : {})}\r\n                >\r\n                    <div className={classes.iconContainer}>\r\n                        <a href='https://github.com/Khlustov'>\r\n                            <GitHubIcon\r\n                            className={classes.icons}                        \r\n                            >                            \r\n                            </GitHubIcon>\r\n                        </a>\r\n                    </div>\r\n                </Slide>               \r\n                <Slide \r\n                direction='right' \r\n                in={checked}\r\n                {...(checked ? {timeout: 1000} : {})}\r\n                >\r\n                    <div className={classes.iconContainer}>\r\n                        <a href='https://t.me/AlexanderKhlustov'>\r\n                            <TelegramIcon\r\n                            className={classes.icons}\r\n                            >\r\n                            </TelegramIcon>\r\n                        </a>\r\n                    </div>\r\n                </Slide>\r\n                <Slide\r\n                direction='right'\r\n                in={checked}\r\n                {...checked ? {timeout: 500} : {}}\r\n                >\r\n                    <div className={classes.iconContainerLast}>\r\n                        <button className={classes.emailButton} onClick={showModal}>\r\n                            <EmailIcon\r\n                            className={classes.icons}\r\n                            >\r\n                            </EmailIcon>\r\n                        </button>\r\n                    </div>    \r\n                </Slide>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Footer }","import React, { useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { hideEmailModal, \r\n         changeEmailSenderName, \r\n         changeEmailSenderAdress, \r\n         changeEmailSenderMessage \r\n        } from '../../actions/emailModal';\r\nimport { showAlert, hideAlert } from '../../actions/alerts'\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    emailModalWrapper: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        backdropFilter: 'blur(1.5px)',\r\n        position: 'fixed',\r\n        top: '0',\r\n        left: '0',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: '1000',\r\n        transform: 'scale(0)',\r\n        transition: '0.35s',        \r\n    },\r\n    emailModalWrapperActive: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        backdropFilter: 'blur(1.5px)',\r\n        position: 'fixed',\r\n        top: '0',\r\n        left: '0',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: '1000',\r\n        transform: 'scale(1)',\r\n        transition: '0.35s',\r\n    },\r\n    modal: {\r\n        width: '95%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '55%',\r\n        },        \r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',        \r\n        backgroundColor: '#FFF',\r\n        borderRadius: '10px',\r\n        border: '1px solid #6d6d6d',\r\n    },\r\n    inputContainer: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',        \r\n        marginTop: '1rem', \r\n    },\r\n    input: {\r\n        width: '90%',\r\n        margin: '0.5rem',\r\n    },\r\n    buttonsContainer: {\r\n        width: '90%',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        marginTop: '2rem',\r\n        marginBottom: '1rem',        \r\n    },\r\n    modalButton: {\r\n        fontFamily: 'Nunito',\r\n    }\r\n}));\r\n\r\nconst EmailModal = () => {    \r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const active = useSelector(state => state.emailModal.active);\r\n    const name = useSelector(state => state.emailModal.emailSenderName);\r\n    const adress = useSelector(state => state.emailModal.emailSenderAdress);\r\n    const message = useSelector(state => state.emailModal.emailSenderMessage);\r\n    \r\n    const form = useRef();\r\n\r\n    const hideModal = useCallback(() => {\r\n        dispatch(hideEmailModal());\r\n    }, [dispatch]);\r\n\r\n    const onChangeEmailSenderName = useCallback((event) => {\r\n        dispatch(changeEmailSenderName(event.target.value));\r\n    }, [dispatch]);\r\n\r\n    const onChangeEmailSenderAdress = useCallback((event) => {\r\n        dispatch(changeEmailSenderAdress(event.target.value));\r\n    }, [dispatch]);\r\n\r\n    const onChangeEmailSenderMessage = useCallback((event) => {\r\n        dispatch(changeEmailSenderMessage(event.target.value));\r\n    }, [dispatch]);\r\n\r\n    const sendEmail = (e) => {\r\n        e.preventDefault();\r\n        emailjs.sendForm('service_prlbftj', 'template_lhic5qr', form.current, 'user_L5D5b8atUSGUyPsjyBiuP')\r\n        .then((result) => {\r\n          console.log(result.text);\r\n        }, (error) => {\r\n          console.log(error.text);\r\n        });\r\n        dispatch(showAlert());\r\n        setTimeout(() => {dispatch(hideEmailModal())}, 500);\r\n        setTimeout(() => {dispatch(hideAlert())}, 2500);\r\n    };\r\n\r\n    const correctEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    const notEmptyField = /^(?!\\s*$).+/;\r\n\r\n\r\n    return (\r\n        <div \r\n        className={active ? classes.emailModalWrapperActive : classes.emailModalWrapper}\r\n        >\r\n            <form \r\n            ref={form}\r\n            className={classes.modal}           \r\n            >\r\n                <div className={classes.inputContainer}>\r\n                    <TextField \r\n                    label=\"Ваше имя\" \r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.input}\r\n                    value={name}\r\n                    onChange={onChangeEmailSenderName}\r\n                    name='name'\r\n                    color={notEmptyField.test(name) ? \"primary\" : \"secondary\"}\r\n                    />\r\n                    <TextField \r\n                    label=\"Ваш email\" \r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.input}\r\n                    value={adress}\r\n                    onChange={onChangeEmailSenderAdress}\r\n                    name='email'\r\n                    color={correctEmail.test(adress) ? \"primary\" : \"secondary\"}\r\n                    />\r\n                    <TextField               \r\n                    label=\"Текст сообщения\"\r\n                    multiline\r\n                    rows={4}          \r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.input}\r\n                    value={message}\r\n                    onChange={onChangeEmailSenderMessage}\r\n                    name='message'\r\n                    color={notEmptyField.test(message) ? \"primary\" : \"secondary\"}\r\n                    />    \r\n                </div> \r\n                <div className={classes.buttonsContainer}>\r\n                    <Button \r\n                    color=\"secondary\" \r\n                    onClick={hideModal}\r\n                    className={classes.modalButton}\r\n                    >\r\n                    Отмена\r\n                    </Button>\r\n                    <Button \r\n                    color=\"primary\" \r\n                    onClick={sendEmail}\r\n                    className={classes.modalButton}\r\n                    disabled={notEmptyField.test(name) && correctEmail.test(adress) && notEmptyField.test(message) ? false : true}\r\n                    >\r\n                    Отправить\r\n                    </Button>                    \r\n                </div>               \r\n            </form>            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport { EmailModal };","import { actionTypes } from '../constants'\r\n\r\nexport const showAlert = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_ALERT_ACTIVE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const hideAlert = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_ALERT_NOT_ACTIVE,\r\n        payload\r\n    }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    successSendingEmailWrapper: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        top: '0',\r\n        left: '0',        \r\n        transform: 'scale(0)',\r\n        transition: '0.35s',\r\n        zIndex: '20000'\r\n    },\r\n    successSendingEmailWrapperActive: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        top: '0',\r\n        left: '0',        \r\n        transform: 'scale(1)',\r\n        transition: '0.35s',\r\n        zIndex: '20000'\r\n    },\r\n    alertContainer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            position: 'absolute',\r\n            bottom: '100px',\r\n            right: '50px',\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        height: '85vh',\r\n        \r\n    }\r\n}));\r\n\r\nconst SuccessEmailSending = () => {\r\n    const classes = useStyles();\r\n    const active = useSelector(state => state.alerts.activeAlert);\r\n\r\n    return (\r\n        <div className={active ? classes.successSendingEmailWrapperActive : classes.successSendingEmailWrapper}>\r\n            <div className={classes.alertContainer}>\r\n            <Alert severity=\"success\">\r\n                <AlertTitle><strong>Спасибо</strong></AlertTitle>\r\n                Ваше сообщение успешно отправлено\r\n            </Alert>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { SuccessEmailSending };","import { actionTypes } from '../constants';\r\nimport axios from 'axios';\r\n\r\nexport const getAllCurrencies = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_ALL_CURRENCIES_START\r\n        });\r\n\r\n        try {\r\n            const response = await axios.get('https://www.nbrb.by/api/exrates/rates?periodicity=0');\r\n\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CURRENCIES_SUCCESS,\r\n                payload: response.data\r\n            })\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CURRENCIESS_FAILURE,\r\n                payload: error.response\r\n            })\r\n\r\n        }\r\n\r\n    };\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCurrencies } from '../../actions/getAllCurrencies';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainPage: {\r\n        width: '100%',\r\n        height: '80vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    mainPageWrapper: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '85%',\r\n        }\r\n    },\r\n    tableContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        fontFamily: 'Nunito',\r\n        scrollbars: 'none' \r\n    },\r\n    tableCellBody: {\r\n        textAlign: 'center',\r\n        fontFamily: 'Nunito',\r\n        color: '#6d6d6d'\r\n    },\r\n    tableCellHeader: {\r\n        textAlign: 'center',\r\n        fontFamily: 'Nunito',\r\n        color: '#000'\r\n    },\r\n    collapse: {\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n}));\r\n\r\nconst columns = [\r\n    {id: 'currencyAbbreviation', label: 'Аббревиатура', minWidth: 170, align: 'center', format: (value) => value.toLocaleString('en-US')},    \r\n    {id: 'currencyName', label: 'Количество', minWidth: 170, align: 'center'},\r\n    {id: 'scale', label: 'Валюта', minWidth: 170, align: 'center'},\r\n    {id: 'rate', label: 'Курс', minWidth: 170, align: 'center'}, \r\n];\r\n\r\nconst MainPage = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const currencies = useSelector(state => state.main.currencies); \r\n    const [checked, setChecked] = useState(false);\r\n    const rows = [];   \r\n\r\n    if(currencies) {\r\n        currencies.map((item) => {\r\n            return rows.push(item);\r\n        });\r\n    };\r\n    \r\n    useEffect(() => {\r\n        dispatch(getAllCurrencies());\r\n        setChecked((prev) => !prev);        \r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={classes.mainPage}>\r\n            <Slide\r\n            direction='up'            \r\n            in={checked}\r\n            {...(checked) ? {timeout: 1000} : {}}\r\n            >\r\n                <div className={classes.mainPageWrapper}>\r\n                    <TableContainer className={classes.tableContainer}>\r\n                        <Table stickyHeader>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {columns.map((column) => (\r\n                                        <TableCell key={column.id} className={classes.tableCellHeader}>\r\n                                            {column.label}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => {\r\n                                    return (\r\n                                        <TableRow hover key={row.Cur_ID}>\r\n                                           <TableCell className={classes.tableCellBody}>{row.Cur_Abbreviation}</TableCell>\r\n                                           <TableCell className={classes.tableCellBody}>{row.Cur_Scale}</TableCell>\r\n                                           <TableCell className={classes.tableCellBody}>{row.Cur_Name}</TableCell>\r\n                                           <TableCell className={classes.tableCellBody}>{row.Cur_OfficialRate}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}        \r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>                    \r\n                </div>\r\n            </Slide>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { MainPage };","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { onChangeTextareaValue } from '../../actions/converter';\r\nimport { getAllCurrencies } from '../../actions/getAllCurrencies';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    converterPage: {\r\n        width: '100%',\r\n        height: '80vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    converterInputContainer: {\r\n        display: 'flex',\r\n        margin: '10px auto'\r\n    },\r\n    converterInputElement: {\r\n        margin: '0 10px',\r\n    },\r\n    converterResult: {        \r\n        fontFamily: 'Nunito',\r\n        fontSize: '48px',\r\n        color: '#3f51b5',\r\n        fontWeight: '700',\r\n        margin: '0 7px',\r\n    },\r\n    converterResultContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',  \r\n            flexDirection: 'row',          \r\n            justifyContent: 'center',\r\n            alignItems: 'center',           \r\n        },\r\n    }\r\n}));\r\n\r\nconst ConverterPage = () => {\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const currencies = useSelector(state => state.converter.currencies);\r\n    const inputValue = useSelector(state => state.converter.inputValue);\r\n    const [fromCurrency, setFromCurrency] = useState('');      \r\n    let rate; \r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCurrencies());                \r\n    }, [dispatch]);\r\n        \r\n  \r\n    const rates = Object.fromEntries(currencies.map((n) => [n.Cur_Abbreviation, n.Cur_OfficialRate / n.Cur_Scale]))    \r\n    const abbreviatures = Object.keys(rates);\r\n    \r\n    abbreviatures.forEach(key => {        \r\n        if(key === fromCurrency) {            \r\n            rate = rates[key]\r\n        }\r\n    })\r\n   \r\n    const result = inputValue * rate;       \r\n                 \r\n    const fromCurrencyHandleChange = (event) => {        \r\n        setFromCurrency(event.target.value);        \r\n      }; \r\n      \r\n    const inputValueHandleChange = useCallback((event) => {\r\n        dispatch(onChangeTextareaValue(event.target.value))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={classes.converterPage}>\r\n            <div className={classes.converterResultContainer}>                \r\n                <CountUp className={classes.converterResult}start={0} end={result} duration={0.75} decimals={4}/>\r\n                <span className={classes.converterResult}>BYN</span>\r\n            </div>\r\n            <div className={classes.converterInputContainer}>\r\n                <TextField \r\n                className={classes.converterInputElement}\r\n                id=\"outlined-basic\"                \r\n                variant=\"outlined\"\r\n                onChange={inputValueHandleChange} \r\n                value={inputValue}\r\n                />                \r\n                <Select                               \r\n                className={classes.converterInputElement}                \r\n                onChange={fromCurrencyHandleChange}                 \r\n                value={fromCurrency} \r\n                defaultValue={''} \r\n                variant='outlined'              \r\n                > \r\n                {abbreviatures.map((item) => (<MenuItem key={item} value={item}>{item}</MenuItem>))}                \r\n                </Select>                \r\n            </div>            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport { ConverterPage };","import { actionTypes } from '../constants';\r\nimport axios from 'axios';\r\n\r\nexport const onChangeTextareaValue = (payload) => {\r\n    return {\r\n        type: actionTypes.CHANGE_CONVERTER_VALUE,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const getAllCurrencies = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_ALL_CURRENCIES_START\r\n        });\r\n\r\n        try {\r\n            const response = await axios.get('https://www.nbrb.by/api/exrates/rates?periodicity=0');\r\n\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CURRENCIES_SUCCESS,\r\n                payload: response.data\r\n            })\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            dispatch({\r\n                type: actionTypes.GET_ALL_CURRENCIESS_FAILURE,\r\n                payload: error.response\r\n            })\r\n\r\n        }\r\n\r\n    };\r\n};\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { Navbar, Footer, EmailModal, SuccessEmailSending } from '../components';\r\nimport { ROUTES } from '../constants';\r\nimport { MainPage, ConverterPage } from '../pages';\r\n\r\nexport const Navigator = () => {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar/>\r\n            <Switch>\r\n                <Route path={ROUTES.CONVERTER} component={ConverterPage}/>\r\n                <Route path={ROUTES.MAIN} component={MainPage}/>\r\n            </Switch>\r\n            <Footer/>\r\n            <EmailModal/> \r\n            <SuccessEmailSending/>          \r\n        </BrowserRouter>\r\n    )\r\n}","import { actionTypes } from '../constants';\r\n\r\nconst initialState = {\r\n    currencies: null,\r\n    loading: false,\r\n    error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) { \r\n\r\n        case actionTypes.GET_ALL_CURRENCIES_START: \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }; \r\n\r\n        case actionTypes.GET_ALL_CURRENCIES_SUCCESS: \r\n            return {\r\n                ...state,\r\n                currencies: action.payload,\r\n                loading: false,\r\n            }; \r\n\r\n        case actionTypes.GET_ALLCURRENCIESS_FAILURE: \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: action.payload,\r\n            };  \r\n                  \r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { actionTypes } from '../constants';\r\n\r\nconst initialState = {  \r\n    inputValue: '', \r\n    currencies: [], \r\n    loading: false,\r\n    error: '',  \r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {       \r\n\r\n        case actionTypes.CHANGE_CONVERTER_VALUE: \r\n            return {\r\n                ...state,\r\n                inputValue: action.payload\r\n            }\r\n        \r\n\r\n        case actionTypes.GET_ALL_CURRENCIES_START: \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        \r\n\r\n        case actionTypes.GET_ALL_CURRENCIES_SUCCESS: \r\n            return {\r\n                ...state,\r\n                currencies: action.payload,\r\n                loading: false,\r\n            }\r\n        \r\n\r\n        case actionTypes.GET_ALLCURRENCIESS_FAILURE: \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: action.payload,\r\n            };\r\n    \r\n\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { actionTypes } from '../constants';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    emailSenderName: '',\r\n    emailSenderAdress: '',\r\n    emailSenderMessage: '',\r\n    successSendingEmail: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {        \r\n        case actionTypes.SET_EMAIL_MODAL_ACTIVE: \r\n            return {\r\n                ...state,\r\n                active: true,\r\n            }; \r\n\r\n        case actionTypes.SET_EMAIL_MODAL_NOT_ACTIVE: \r\n            return {\r\n                ...state,\r\n                active: false,\r\n                emailSenderName: '',\r\n                emailSenderAdress: '',\r\n                emailSenderMessage: '',\r\n            }; \r\n         \r\n        case actionTypes.CHANGE_EMAIL_SENDER_NAME:\r\n            return {\r\n                ...state,\r\n                emailSenderName: action.payload,\r\n            };\r\n\r\n        case actionTypes.CHANGE_EMAIL_SENDER_ADRESS:\r\n            return {\r\n                ...state,\r\n                emailSenderAdress: action.payload,\r\n            };\r\n\r\n        case actionTypes.CHANGE_EMAIL_SENDER_MESSAGE:\r\n            return {\r\n                ...state,\r\n                emailSenderMessage: action.payload,\r\n            };\r\n\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { actionTypes } from '../constants';\r\n\r\nconst initialState = {\r\n    activeAlert: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {        \r\n        case actionTypes.SET_ALERT_ACTIVE: \r\n            return {\r\n                ...state,\r\n                activeAlert: true,\r\n            }; \r\n\r\n        case actionTypes.SET_ALERT_NOT_ACTIVE:\r\n            return {\r\n                ...state,\r\n                activeAlert: false\r\n            }\r\n\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\nimport MainPageReducer from './MainPageReducer';\r\nimport ConverterPageReducer from './ConverterPageReducer';\r\nimport EmailModalReducer from './FooterReducer';\r\nimport AlertsReducer from './AlertsReducer';\r\n\r\nexport default combineReducers({\r\n    main: MainPageReducer,\r\n    converter: ConverterPageReducer,\r\n    emailModal: EmailModalReducer,\r\n    alerts: AlertsReducer,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Navigator } from './navigation';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Navigator/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}